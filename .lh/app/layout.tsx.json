{
    "sourceFile": "app/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744400015068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744400015068,
            "name": "Commit-0",
            "content": "import '../styles/global.css'\nimport { Inter } from 'next/font/google'\nimport { ReactNode } from 'react'\nimport { ThemeWrapper } from '@/components/ThemeWrapper'\nimport { headers } from 'next/headers'\nimport { ToastProvider } from '@/components/ToastContext'\nimport { FloatingCTA } from '@/components/cta/FloatingCTA'\n\n// Use Inter font as a fallback for SF Pro\nconst inter = Inter({\n  subsets: ['latin'],\n  variable: '--font-sf-pro',\n  display: 'swap',\n})\n\nexport const metadata = {\n  title: 'Mustafa Sualp | CEO & Founder',\n  description: 'Tech-forward, founder-focused, AI-aligned personal brand website',\n}\n\nexport default async function RootLayout({ children }: { children: ReactNode }) {\n  // Get the current pathname to determine if we're on the contact page\n  const headersList = await headers();\n  const xPathname = headersList.get('x-pathname');\n  const xUrl = headersList.get('x-url');\n  const pathname = xPathname || xUrl || '';\n  const isContactPage = pathname.includes('/contact');\n  \n  const scriptsToLoad: string[] = [];\n\n  if (isContactPage && process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY) {\n    scriptsToLoad.push(`https://www.google.com/recaptcha/api.js?render=${process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY}`);\n  }\n\n  if (process.env.NEXT_PUBLIC_GA_ID) {\n    scriptsToLoad.push(`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GA_ID}`);\n  }\n\n  return (\n    <html lang=\"en\" className={inter.variable} suppressHydrationWarning>\n      <head>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n              (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n              new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n              j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n              'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n              })(window,document,'script','dataLayer','GTM-TRXBFF7P');\n            `,\n          }}\n        />\n        {scriptsToLoad.map((src, index) => (\n          <script key={index} src={src} async defer />\n        ))}\n        {process.env.NEXT_PUBLIC_GA_ID && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n                gtag('config', '${process.env.NEXT_PUBLIC_GA_ID}');\n              `,\n            }}\n          />\n        )}\n      </head>\n      <body\n        className=\"\n          bg-gradient-to-br from-gray-100 to-gray-200 \n          dark:from-gray-800 dark:to-gray-900\n          text-gray-900\n          dark:text-gray-100\n          min-h-screen\n          font-sans\n          transition-colors\n          duration-300\n        \"\n      >\n        <noscript>\n          <iframe\n            src=\"https://www.googletagmanager.com/ns.html?id=GTM-TRXBFF7P\"\n            height=\"0\"\n            width=\"0\"\n            style={{ display: 'none', visibility: 'hidden' }}\n          />\n        </noscript>\n        <ToastProvider>\n          <ThemeWrapper hideCallToAction={isContactPage}>\n            {children}\n            <FloatingCTA primaryCTA=\"earlyAccess\" />\n          </ThemeWrapper>\n        </ToastProvider>\n      </body>\n    </html>\n  )\n}\n"
        }
    ]
}