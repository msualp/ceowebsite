{
    "sourceFile": "components/cta/CTAGroup.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1744399886695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744399897115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,31 @@\n import { ReactNode } from 'react';\n import { Button } from './Button';\n import { CalendarDays, Mail, Linkedin, ArrowRight } from 'lucide-react';\n \n+type CTAType = 'earlyAccess' | 'calendly' | 'linkedin' | 'email' | 'custom' | 'none';\n+\n+interface CTAConfig {\n+  label: string;\n+  href: string;\n+  icon: ReactNode;\n+  variant: string;\n+  external?: boolean;\n+}\n+\n interface CTAGroupProps {\n   className?: string;\n   variant?: 'hero' | 'inline' | 'footer' | 'compact';\n-  primaryCTA?: 'earlyAccess' | 'calendly' | 'linkedin' | 'email' | 'custom';\n+  primaryCTA?: CTAType;\n   primaryLabel?: string;\n   primaryHref?: string;\n   primaryIcon?: ReactNode;\n-  secondaryCTA?: 'earlyAccess' | 'calendly' | 'linkedin' | 'email' | 'custom' | 'none';\n+  secondaryCTA?: CTAType;\n   secondaryLabel?: string;\n   secondaryHref?: string;\n   secondaryIcon?: ReactNode;\n   showAll?: boolean;\n   direction?: 'row' | 'column';\n-}\n-\n-export function CTAGroup({\n-  className = '',\n-  variant = 'inline',\n-  primaryCTA = 'earlyAccess',\n-  primaryLabel,\n-  primaryHref,\n-  primaryIcon,\n-  secondaryCTA = 'calendly',\n   secondaryLabel,\n   secondaryHref,\n   secondaryIcon,\n   showAll = false,\n"
                },
                {
                    "date": 1744399905110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,67 +24,67 @@\n   secondaryHref?: string;\n   secondaryIcon?: ReactNode;\n   showAll?: boolean;\n   direction?: 'row' | 'column';\n+}\n+\n+export function CTAGroup({\n+  className = '',\n+  variant = 'inline',\n+  primaryCTA = 'earlyAccess',\n+  primaryLabel,\n+  primaryHref,\n+  primaryIcon,\n+  secondaryCTA = 'calendly',\n   secondaryLabel,\n   secondaryHref,\n   secondaryIcon,\n   showAll = false,\n   direction = 'row',\n }: CTAGroupProps) {\n   // Define CTA configurations\n-  const ctaConfigs = {\n+  const ctaConfigs: Record<CTAType, CTAConfig> = {\n     earlyAccess: {\n       label: 'Join Early Access',\n       href: '/early-access',\n       icon: <ArrowRight className=\"w-4 h-4\" />,\n-      variant: 'primary' as const,\n+      variant: 'primary',\n     },\n     calendly: {\n       label: 'Schedule a Meeting',\n       href: 'https://calendly.com/msualp',\n       icon: <CalendarDays className=\"w-4 h-4\" />,\n-      variant: 'calendly' as const,\n+      variant: 'calendly',\n       external: true,\n     },\n     linkedin: {\n       label: 'Connect on LinkedIn',\n       href: 'https://www.linkedin.com/in/sualp/',\n       icon: <Linkedin className=\"w-4 h-4\" />,\n-      variant: 'linkedin' as const,\n+      variant: 'linkedin',\n       external: true,\n     },\n     email: {\n       label: 'Email Me',\n       href: 'mailto:msualp@sociail.com',\n       icon: <Mail className=\"w-4 h-4\" />,\n-      variant: 'outline' as const,\n+      variant: 'outline',\n       external: true,\n     },\n     custom: {\n       label: '',\n       href: '',\n       icon: null,\n-      variant: 'primary' as const,\n+      variant: 'primary',\n+      external: false,\n     },\n     none: {\n       label: '',\n       href: '',\n       icon: null,\n-      variant: 'primary' as const,\n+      variant: 'primary',\n+      external: false,\n     },\n-  };\n-\n-  // Set up the primary CTA\n-  const primary = {\n-    ...ctaConfigs[primaryCTA],\n-    label: primaryLabel || ctaConfigs[primaryCTA].label,\n-    href: primaryHref || ctaConfigs[primaryCTA].href,\n-    icon: primaryIcon || ctaConfigs[primaryCTA].icon,\n-  };\n-\n-  // Set up the secondary CTA\n-  const secondary = {\n     ...ctaConfigs[secondaryCTA],\n     label: secondaryLabel || ctaConfigs[secondaryCTA].label,\n     href: secondaryHref || ctaConfigs[secondaryCTA].href,\n     icon: secondaryIcon || ctaConfigs[secondaryCTA].icon,\n"
                },
                {
                    "date": 1744399917547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n interface CTAConfig {\n   label: string;\n   href: string;\n   icon: ReactNode;\n-  variant: string;\n+  variant: 'primary' | 'secondary' | 'outline' | 'linkedin' | 'calendly' | 'sociail' | 'ghost';\n   external?: boolean;\n }\n \n interface CTAGroupProps {\n@@ -83,8 +83,20 @@\n       icon: null,\n       variant: 'primary',\n       external: false,\n     },\n+  };\n+\n+  // Set up the primary CTA\n+  const primary = {\n+    ...ctaConfigs[primaryCTA],\n+    label: primaryLabel || ctaConfigs[primaryCTA].label,\n+    href: primaryHref || ctaConfigs[primaryCTA].href,\n+    icon: primaryIcon || ctaConfigs[primaryCTA].icon,\n+  };\n+\n+  // Set up the secondary CTA\n+  const secondary = {\n     ...ctaConfigs[secondaryCTA],\n     label: secondaryLabel || ctaConfigs[secondaryCTA].label,\n     href: secondaryHref || ctaConfigs[secondaryCTA].href,\n     icon: secondaryIcon || ctaConfigs[secondaryCTA].icon,\n@@ -171,9 +183,9 @@\n         <Button\n           variant={primary.variant}\n           size={currentStyles.primarySize}\n           href={primary.href}\n-          external={primary.external}\n+          external={primary.external || false}\n           rightIcon={primary.icon}\n         >\n           {primary.label}\n         </Button>\n@@ -182,9 +194,9 @@\n         <Button\n           variant={currentStyles.secondaryVariant}\n           size={currentStyles.secondarySize}\n           href={secondary.href}\n-          external={secondary.external}\n+          external={secondary.external || false}\n           rightIcon={secondary.icon}\n         >\n           {secondary.label}\n         </Button>\n"
                },
                {
                    "date": 1744399922945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n     footer: {\n       container: 'gap-2',\n       primarySize: 'md' as const,\n       secondarySize: 'md' as const,\n-      secondaryVariant: ctaConfigs[secondaryCTA].variant,\n+      secondaryVariant: ctaConfigs[secondaryCTA].variant as const,\n     },\n     compact: {\n       container: 'gap-2',\n       primarySize: 'sm' as const,\n"
                },
                {
                    "date": 1744399935028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n     footer: {\n       container: 'gap-2',\n       primarySize: 'md' as const,\n       secondarySize: 'md' as const,\n-      secondaryVariant: ctaConfigs[secondaryCTA].variant as const,\n+      secondaryVariant: ctaConfigs[secondaryCTA].variant,\n     },\n     compact: {\n       container: 'gap-2',\n       primarySize: 'sm' as const,\n"
                }
            ],
            "date": 1744399886695,
            "name": "Commit-0",
            "content": "import { ReactNode } from 'react';\nimport { Button } from './Button';\nimport { CalendarDays, Mail, Linkedin, ArrowRight } from 'lucide-react';\n\ninterface CTAGroupProps {\n  className?: string;\n  variant?: 'hero' | 'inline' | 'footer' | 'compact';\n  primaryCTA?: 'earlyAccess' | 'calendly' | 'linkedin' | 'email' | 'custom';\n  primaryLabel?: string;\n  primaryHref?: string;\n  primaryIcon?: ReactNode;\n  secondaryCTA?: 'earlyAccess' | 'calendly' | 'linkedin' | 'email' | 'custom' | 'none';\n  secondaryLabel?: string;\n  secondaryHref?: string;\n  secondaryIcon?: ReactNode;\n  showAll?: boolean;\n  direction?: 'row' | 'column';\n}\n\nexport function CTAGroup({\n  className = '',\n  variant = 'inline',\n  primaryCTA = 'earlyAccess',\n  primaryLabel,\n  primaryHref,\n  primaryIcon,\n  secondaryCTA = 'calendly',\n  secondaryLabel,\n  secondaryHref,\n  secondaryIcon,\n  showAll = false,\n  direction = 'row',\n}: CTAGroupProps) {\n  // Define CTA configurations\n  const ctaConfigs = {\n    earlyAccess: {\n      label: 'Join Early Access',\n      href: '/early-access',\n      icon: <ArrowRight className=\"w-4 h-4\" />,\n      variant: 'primary' as const,\n    },\n    calendly: {\n      label: 'Schedule a Meeting',\n      href: 'https://calendly.com/msualp',\n      icon: <CalendarDays className=\"w-4 h-4\" />,\n      variant: 'calendly' as const,\n      external: true,\n    },\n    linkedin: {\n      label: 'Connect on LinkedIn',\n      href: 'https://www.linkedin.com/in/sualp/',\n      icon: <Linkedin className=\"w-4 h-4\" />,\n      variant: 'linkedin' as const,\n      external: true,\n    },\n    email: {\n      label: 'Email Me',\n      href: 'mailto:msualp@sociail.com',\n      icon: <Mail className=\"w-4 h-4\" />,\n      variant: 'outline' as const,\n      external: true,\n    },\n    custom: {\n      label: '',\n      href: '',\n      icon: null,\n      variant: 'primary' as const,\n    },\n    none: {\n      label: '',\n      href: '',\n      icon: null,\n      variant: 'primary' as const,\n    },\n  };\n\n  // Set up the primary CTA\n  const primary = {\n    ...ctaConfigs[primaryCTA],\n    label: primaryLabel || ctaConfigs[primaryCTA].label,\n    href: primaryHref || ctaConfigs[primaryCTA].href,\n    icon: primaryIcon || ctaConfigs[primaryCTA].icon,\n  };\n\n  // Set up the secondary CTA\n  const secondary = {\n    ...ctaConfigs[secondaryCTA],\n    label: secondaryLabel || ctaConfigs[secondaryCTA].label,\n    href: secondaryHref || ctaConfigs[secondaryCTA].href,\n    icon: secondaryIcon || ctaConfigs[secondaryCTA].icon,\n  };\n\n  // Define variant-specific classes and sizes\n  const variantStyles = {\n    hero: {\n      container: 'gap-4',\n      primarySize: 'xl' as const,\n      secondarySize: 'xl' as const,\n      secondaryVariant: 'secondary' as const,\n    },\n    inline: {\n      container: 'gap-3',\n      primarySize: 'md' as const,\n      secondarySize: 'md' as const,\n      secondaryVariant: 'outline' as const,\n    },\n    footer: {\n      container: 'gap-2',\n      primarySize: 'md' as const,\n      secondarySize: 'md' as const,\n      secondaryVariant: ctaConfigs[secondaryCTA].variant,\n    },\n    compact: {\n      container: 'gap-2',\n      primarySize: 'sm' as const,\n      secondarySize: 'sm' as const,\n      secondaryVariant: 'ghost' as const,\n    },\n  };\n\n  const currentStyles = variantStyles[variant];\n  const directionClass = direction === 'column' ? 'flex-col' : 'flex-row';\n\n  if (showAll) {\n    // Render all CTAs\n    return (\n      <div className={`flex flex-wrap gap-3 ${className}`}>\n        <Button\n          variant=\"primary\"\n          size={currentStyles.primarySize}\n          href={ctaConfigs.earlyAccess.href}\n          rightIcon={ctaConfigs.earlyAccess.icon}\n        >\n          {ctaConfigs.earlyAccess.label}\n        </Button>\n        <Button\n          variant=\"calendly\"\n          size={currentStyles.primarySize}\n          href={ctaConfigs.calendly.href}\n          external={true}\n          rightIcon={ctaConfigs.calendly.icon}\n        >\n          {ctaConfigs.calendly.label}\n        </Button>\n        <Button\n          variant=\"linkedin\"\n          size={currentStyles.primarySize}\n          href={ctaConfigs.linkedin.href}\n          external={true}\n          rightIcon={ctaConfigs.linkedin.icon}\n        >\n          {ctaConfigs.linkedin.label}\n        </Button>\n        <Button\n          variant=\"outline\"\n          size={currentStyles.primarySize}\n          href={ctaConfigs.email.href}\n          external={true}\n          rightIcon={ctaConfigs.email.icon}\n        >\n          {ctaConfigs.email.label}\n        </Button>\n      </div>\n    );\n  }\n\n  // Render primary and secondary CTAs\n  return (\n    <div className={`flex ${directionClass} ${currentStyles.container} ${className}`}>\n      {primaryCTA !== 'none' && (\n        <Button\n          variant={primary.variant}\n          size={currentStyles.primarySize}\n          href={primary.href}\n          external={primary.external}\n          rightIcon={primary.icon}\n        >\n          {primary.label}\n        </Button>\n      )}\n      {secondaryCTA !== 'none' && (\n        <Button\n          variant={currentStyles.secondaryVariant}\n          size={currentStyles.secondarySize}\n          href={secondary.href}\n          external={secondary.external}\n          rightIcon={secondary.icon}\n        >\n          {secondary.label}\n        </Button>\n      )}\n    </div>\n  );\n}\n"
        }
    ]
}