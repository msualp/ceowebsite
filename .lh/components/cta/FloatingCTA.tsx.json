{
    "sourceFile": "components/cta/FloatingCTA.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744399989534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744399989534,
            "name": "Commit-0",
            "content": "'use client';\n\nimport { useState } from 'react';\nimport { Button } from './Button';\nimport { X, Plus, CalendarDays, Mail, Linkedin, Sparkles } from 'lucide-react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\ninterface FloatingCTAProps {\n  primaryCTA?: 'earlyAccess' | 'calendly' | 'linkedin' | 'email';\n}\n\nexport function FloatingCTA({ primaryCTA = 'earlyAccess' }: FloatingCTAProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  \n  const toggleOpen = () => setIsOpen(!isOpen);\n  \n  const ctaConfigs = {\n    earlyAccess: {\n      icon: <Sparkles className=\"w-5 h-5\" />,\n      label: 'Join Early Access',\n      href: '/early-access',\n      bgColor: 'bg-gradient-to-r from-blue-600 to-purple-600',\n    },\n    calendly: {\n      icon: <CalendarDays className=\"w-5 h-5\" />,\n      label: 'Schedule Meeting',\n      href: 'https://calendly.com/msualp-main',\n      bgColor: 'bg-[#00A2FF]',\n    },\n    linkedin: {\n      icon: <Linkedin className=\"w-5 h-5\" />,\n      label: 'Connect on LinkedIn',\n      href: 'https://www.linkedin.com/in/sualp/',\n      bgColor: 'bg-[#0A66C2]',\n    },\n    email: {\n      icon: <Mail className=\"w-5 h-5\" />,\n      label: 'Email Me',\n      href: 'mailto:msualp@sociail.com',\n      bgColor: 'bg-gray-700 dark:bg-gray-600',\n    },\n  };\n  \n  const primaryConfig = ctaConfigs[primaryCTA];\n  \n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div \n            className=\"absolute bottom-16 right-0 space-y-2\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.2 }}\n          >\n            {Object.entries(ctaConfigs)\n              .filter(([key]) => key !== primaryCTA)\n              .map(([key, config]) => (\n                <motion.div \n                  key={key}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: 10 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"flex items-center gap-2 justify-end\"\n                >\n                  <span className=\"bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 text-sm py-1 px-3 rounded-full shadow-md\">\n                    {config.label}\n                  </span>\n                  <a \n                    href={config.href}\n                    target={key !== 'earlyAccess' ? '_blank' : undefined}\n                    rel={key !== 'earlyAccess' ? 'noopener noreferrer' : undefined}\n                    className={`${config.bgColor} text-white rounded-full p-3 shadow-lg hover:shadow-xl transition-all hover:scale-105 flex items-center justify-center`}\n                  >\n                    {config.icon}\n                  </a>\n                </motion.div>\n              ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n      \n      <div className=\"flex items-center gap-2 justify-end\">\n        {isOpen && (\n          <motion.span \n            className=\"bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 text-sm py-1 px-3 rounded-full shadow-md\"\n            initial={{ opacity: 0, x: -10 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -10 }}\n          >\n            {primaryConfig.label}\n          </motion.span>\n        )}\n        <button\n          onClick={toggleOpen}\n          className={`${isOpen ? 'bg-gray-700' : primaryConfig.bgColor} text-white rounded-full p-3 shadow-lg hover:shadow-xl transition-all hover:scale-105 flex items-center justify-center z-10`}\n          aria-label={isOpen ? 'Close menu' : 'Open menu'}\n        >\n          {isOpen ? <X className=\"w-5 h-5\" /> : primaryConfig.icon}\n        </button>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}