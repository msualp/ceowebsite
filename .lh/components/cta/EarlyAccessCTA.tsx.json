{
    "sourceFile": "components/cta/EarlyAccessCTA.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1744399967187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1744399967187,
            "name": "Commit-0",
            "content": "'use client';\n\nimport { useState } from 'react';\nimport { Button } from './Button';\nimport { ArrowRight } from 'lucide-react';\n\ninterface EarlyAccessCTAProps {\n  className?: string;\n  variant?: 'default' | 'prominent' | 'minimal';\n  backgroundColor?: string;\n  showCounter?: boolean;\n}\n\nexport function EarlyAccessCTA({\n  className = '',\n  variant = 'default',\n  backgroundColor = 'bg-blue-50 dark:bg-blue-900/20',\n  showCounter = false,\n}: EarlyAccessCTAProps) {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  \n  const remainingSpots = 247; // This would be fetched from an API in a real implementation\n  \n  const validateEmail = (email: string) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n  };\n  \n  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value);\n    if (emailError) {\n      setEmailError('');\n    }\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email.trim()) {\n      setEmailError('Email is required');\n      return;\n    }\n    \n    if (!validateEmail(email)) {\n      setEmailError('Please enter a valid email address');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      setIsSubmitting(false);\n      setIsSubmitted(true);\n      setEmail('');\n    }, 1000);\n  };\n\n  if (variant === 'minimal') {\n    return (\n      <div className={`${className}`}>\n        <Button \n          variant=\"primary\" \n          href=\"/early-access\" \n          rightIcon={<ArrowRight className=\"w-4 h-4\" />}\n        >\n          Join Early Access\n        </Button>\n      </div>\n    );\n  }\n\n  if (variant === 'prominent') {\n    return (\n      <div className={`${backgroundColor} p-8 rounded-xl shadow-md ${className}`}>\n        <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-6\">\n          <div>\n            <h3 className=\"text-2xl font-bold mb-2\">Join the Sociail Beta Program</h3>\n            <p className=\"text-gray-600 dark:text-gray-300 mb-0\">\n              Be among the first to experience the future of AI collaboration.\n            </p>\n            {showCounter && (\n              <div className=\"mt-2 flex items-center\">\n                <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800/30 dark:text-green-300\">\n                  <span className=\"relative flex h-2 w-2 mr-1\">\n                    <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75\"></span>\n                    <span className=\"relative inline-flex rounded-full h-2 w-2 bg-green-500\"></span>\n                  </span>\n                  {remainingSpots} spots remaining\n                </span>\n              </div>\n            )}\n          </div>\n          \n          {isSubmitted ? (\n            <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 text-green-800 dark:text-green-200 rounded-lg p-4 max-w-md\">\n              <p className=\"font-medium\">Thanks for joining!</p>\n              <p className=\"text-sm mt-1\">We'll be in touch soon with details about early access.</p>\n            </div>\n          ) : (\n            <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-3 max-w-md w-full\">\n              <div className=\"flex-grow\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Your Email\"\n                  value={email}\n                  onChange={handleEmailChange}\n                  className={`w-full px-4 py-3 rounded-md border ${\n                    emailError ? 'border-red-500 dark:border-red-700' : 'border-gray-300 dark:border-gray-700'\n                  } dark:bg-gray-800 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition`}\n                  disabled={isSubmitting}\n                />\n                {emailError && <p className=\"text-red-500 text-sm mt-1\">{emailError}</p>}\n              </div>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                isLoading={isSubmitting}\n                rightIcon={!isSubmitting ? <ArrowRight className=\"w-4 h-4\" /> : undefined}\n              >\n                Get Access\n              </Button>\n            </form>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Default variant\n  return (\n    <div className={`${backgroundColor} p-6 rounded-lg ${className}`}>\n      <div className=\"flex items-center gap-3 mb-2\">\n        <span className=\"relative flex h-3 w-3\">\n          <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75\"></span>\n          <span className=\"relative inline-flex rounded-full h-3 w-3 bg-green-500\"></span>\n        </span>\n        <span className=\"font-semibold text-blue-600 dark:text-blue-400\">Early Access Program</span>\n      </div>\n      \n      <h3 className=\"text-xl font-bold mb-3\">Be the first to experience Sociail</h3>\n      \n      {isSubmitted ? (\n        <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 text-green-800 dark:text-green-200 rounded-lg p-4\">\n          <p className=\"font-medium\">Thanks for joining!</p>\n          <p className=\"text-sm mt-1\">We'll be in touch soon with details about early access.</p>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-3\">\n          <div className=\"flex-grow\">\n            <input\n              type=\"email\"\n              placeholder=\"Your Email\"\n              value={email}\n              onChange={handleEmailChange}\n              className={`w-full px-4 py-3 rounded-md border ${\n                emailError ? 'border-red-500 dark:border-red-700' : 'border-gray-300 dark:border-gray-700'\n              } dark:bg-gray-800 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition`}\n              disabled={isSubmitting}\n            />\n            {emailError && <p className=\"text-red-500 text-sm mt-1\">{emailError}</p>}\n          </div>\n          <Button\n            type=\"submit\"\n            variant=\"primary\"\n            isLoading={isSubmitting}\n            rightIcon={!isSubmitting ? <ArrowRight className=\"w-4 h-4\" /> : undefined}\n          >\n            Join Now\n          </Button>\n        </form>\n      )}\n      \n      {showCounter && !isSubmitted && (\n        <div className=\"mt-3 text-sm text-gray-500 dark:text-gray-400\">\n          <span className=\"font-medium text-green-600 dark:text-green-400\">{remainingSpots} spots</span> remaining in our limited beta program\n        </div>\n      )}\n    </div>\n  );\n}\n"
        }
    ]
}